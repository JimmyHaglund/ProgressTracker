// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarframeProgressTrackerApi.Data;

namespace WarframeProgressTrackerApi.Migrations
{
    [DbContext(typeof(WarframeProgressTrackerContext))]
    [Migration("20210708122122_FixProblemWithStupidEntityFrameworkNotBeingAbleToHandleIntelligentSystemDesign")]
    partial class FixProblemWithStupidEntityFrameworkNotBeingAbleToHandleIntelligentSystemDesign
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.ArchGun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<string>("AmmoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Disposition")
                        .HasColumnType("real");

                    b.Property<float>("FireRate")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazineSize")
                        .HasColumnType("int");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmmo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReloadSeconds")
                        .HasColumnType("real");

                    b.Property<string>("TriggerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArchGuns");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.ArchMelee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AttackSpeed")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RangeMetres")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ArchMeleeWeapons");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.Archwing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<float>("ArmorMaxFactor")
                        .HasColumnType("real");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<float>("EnergyMaxFactor")
                        .HasColumnType("real");

                    b.Property<float>("FlightSpeed")
                        .HasColumnType("real");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<float>("HealthMaxFactor")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Polarities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Shield")
                        .HasColumnType("int");

                    b.Property<float>("ShieldMaxFactor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Archwings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 200,
                            ArmorMaxFactor = 1f,
                            Energy = 200,
                            EnergyMaxFactor = 1.8f,
                            FlightSpeed = 1.1f,
                            Health = 400,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Amesha",
                            Polarities = "BDV",
                            Shield = 200,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 2,
                            Armor = 150,
                            ArmorMaxFactor = 1f,
                            Energy = 125,
                            EnergyMaxFactor = 1.8f,
                            FlightSpeed = 0.9f,
                            Health = 450,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Elytron",
                            Polarities = "VV",
                            Shield = 450,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 3,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Energy = 200,
                            EnergyMaxFactor = 1.8f,
                            FlightSpeed = 1.2f,
                            Health = 200,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Itzal",
                            Polarities = "VDB",
                            Shield = 200,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 4,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            Energy = 100,
                            EnergyMaxFactor = 1.8f,
                            FlightSpeed = 1f,
                            Health = 300,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Odonata",
                            Polarities = "VDB",
                            Shield = 300,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 5,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            Energy = 100,
                            EnergyMaxFactor = 1.8f,
                            FlightSpeed = 1.05f,
                            Health = 400,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Odonata Prime",
                            Polarities = "VDBB",
                            Shield = 400,
                            ShieldMaxFactor = 3f
                        });
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.Frame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<float>("ArmorMaxFactor")
                        .HasColumnType("real");

                    b.Property<string>("AuraPolarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<float>("EnergyMaxFactor")
                        .HasColumnType("real");

                    b.Property<string>("ExilusPolarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<float>("HealthMaxFactor")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Polarities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Shield")
                        .HasColumnType("int");

                    b.Property<float>("ShieldMaxFactor")
                        .HasColumnType("real");

                    b.Property<float>("SprintSpeed")
                        .HasColumnType("real");

                    b.Property<int>("SubsumedAbility")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Frames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 225,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Excalibur",
                            Polarities = "DV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 2,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 150,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Ash",
                            Polarities = "VV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 3,
                            Armor = 450,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Atlas",
                            Polarities = "BDV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 0.9f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 4,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Banshee",
                            Polarities = "VV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 5,
                            Armor = 175,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 200,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "B",
                            Health = 75,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Baruuk",
                            Polarities = "DD",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.2f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 6,
                            Armor = 350,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Chroma",
                            Polarities = "BV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 7,
                            Armor = 125,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Ember",
                            Polarities = "BB",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 8,
                            Armor = 125,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Equinox",
                            Polarities = "DV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 9,
                            Armor = 300,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "D",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Frost",
                            Polarities = "BD",
                            Shield = 150,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 0.9f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 10,
                            Armor = 150,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "D",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Gara",
                            Polarities = "VV",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 11,
                            Armor = 300,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 120,
                            EnergyMaxFactor = 2.25f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Garuda",
                            Polarities = "BD",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 12,
                            Armor = 175,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "B",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Gauss",
                            Polarities = "VD",
                            Shield = 150,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.4f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 13,
                            Armor = 350,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 350,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Grendel",
                            Polarities = "BDD",
                            Shield = 25,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 0.95f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 14,
                            Armor = 175,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Harrow",
                            Polarities = "DB",
                            Shield = 150,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 15,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 0,
                            EnergyMaxFactor = 0f,
                            ExilusPolarity = "D",
                            Health = 75,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Hildryn",
                            Polarities = "DD",
                            Shield = 450,
                            ShieldMaxFactor = 3.5f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 16,
                            Armor = 225,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 125,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Hydroid",
                            Polarities = "VB",
                            Shield = 125,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.05f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 17,
                            Armor = 225,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "B",
                            Health = 550,
                            HealthMaxFactor = 4f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Inaros",
                            Polarities = "DD",
                            Shield = 0,
                            ShieldMaxFactor = 0f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 18,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 175,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 75,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Ivara",
                            Polarities = "DB",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 19,
                            Armor = 275,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "D",
                            Energy = 125,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "B",
                            Health = 125,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Khora",
                            Polarities = "VB",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.05f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 20,
                            Armor = 450,
                            ArmorMaxFactor = 1.5f,
                            AuraPolarity = "B",
                            Energy = 0,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 200,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Lavos",
                            Polarities = "DB",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 21,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Limbo",
                            Polarities = "VV",
                            Shield = 75,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 22,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 75,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Loki",
                            Polarities = "DV",
                            Shield = 75,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.25f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 23,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 125,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 75,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Mag",
                            Polarities = "BB",
                            Shield = 150,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.25f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 24,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "V",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 125,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Mesa",
                            Polarities = "BB",
                            Shield = 75,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 25,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 80,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Mirage",
                            Polarities = "DV",
                            Shield = 80,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.2f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 26,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nekros",
                            Polarities = "BV",
                            Shield = 90,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 27,
                            Armor = 190,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 125,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nezha",
                            Polarities = "DV",
                            Shield = 50,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.15f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 28,
                            Armor = 300,
                            ArmorMaxFactor = 1.5f,
                            AuraPolarity = "V",
                            Energy = 100,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 150,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nidus",
                            Polarities = "VD",
                            Shield = 0,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 29,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nova",
                            Polarities = "VV",
                            Shield = 75,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.2f,
                            SubsumedAbility = 0
                        },
                        new
                        {
                            Id = 30,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            AuraPolarity = "B",
                            Energy = 150,
                            EnergyMaxFactor = 1.5f,
                            ExilusPolarity = "",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nyx",
                            Polarities = "VB",
                            Shield = 100,
                            ShieldMaxFactor = 3f,
                            SprintSpeed = 1.1f,
                            SubsumedAbility = 0
                        });
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.MeleeWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AttackSpeed")
                        .HasColumnType("real");

                    b.Property<int>("BlockAngleDegrees")
                        .HasColumnType("int");

                    b.Property<float>("ComboSeconds")
                        .HasColumnType("real");

                    b.Property<float>("Disposition")
                        .HasColumnType("real");

                    b.Property<float>("FollowThrough")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RangeMetres")
                        .HasColumnType("real");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeleeWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttackSpeed = 0.833f,
                            BlockAngleDegrees = 55,
                            ComboSeconds = 5f,
                            Disposition = 1.3f,
                            FollowThrough = 0.6f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Skana",
                            RangeMetres = 2.5f,
                            WeaponType = "Sword"
                        },
                        new
                        {
                            Id = 2,
                            AttackSpeed = 1.17f,
                            BlockAngleDegrees = 50,
                            ComboSeconds = 5f,
                            Disposition = 1.45f,
                            FollowThrough = 0.9f,
                            HowToGet = "",
                            MasteryRankRequired = 2,
                            Name = "Ankyros",
                            RangeMetres = 1.25f,
                            WeaponType = "Fist"
                        },
                        new
                        {
                            Id = 3,
                            AttackSpeed = 1f,
                            BlockAngleDegrees = 45,
                            ComboSeconds = 5f,
                            Disposition = 1.43f,
                            FollowThrough = 0.9f,
                            HowToGet = "",
                            MasteryRankRequired = 3,
                            Name = "Ceramic Dagger",
                            RangeMetres = 1.8f,
                            WeaponType = "Dagger"
                        });
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<float>("ArmorMaxFactor")
                        .HasColumnType("real");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<float>("HealthMaxFactor")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Polarities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Shield")
                        .HasColumnType("int");

                    b.Property<float>("ShieldMaxFactor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 75,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Huras",
                            Polarities = "SSV",
                            Shield = 125,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 2,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 100,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Raksa",
                            Polarities = "SSD",
                            Shield = 105,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 3,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 125,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Sahasa",
                            Polarities = "SSB",
                            Shield = 75,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 4,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 110,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Sunika",
                            Polarities = "SSV",
                            Shield = 90,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 5,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 125,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Chesa",
                            Polarities = "SSD",
                            Shield = 75,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 6,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 95,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Helminth Charger",
                            Polarities = "SSV",
                            Shield = 85,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 7,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 95,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Vizier Predasite",
                            Polarities = "S",
                            Shield = 90,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 8,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 95,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Pharaoh Predasite",
                            Polarities = "S",
                            Shield = 90,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 9,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kubrow",
                            Health = 95,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Medjay Predasite",
                            Polarities = "S",
                            Shield = 90,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 10,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Carrier",
                            Polarities = "SSSSD",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 11,
                            Armor = 150,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 400,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Carrier Prime",
                            Polarities = "SSSSDV",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 12,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Dethcube",
                            Polarities = "SSSS",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 13,
                            Armor = 150,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 300,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Dethcube Prime",
                            Polarities = "SSSSD",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 14,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 350,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Diriga",
                            Polarities = "SSSS",
                            Shield = 50,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 35,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Djinn",
                            Polarities = "SSSSB",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 15,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Helios",
                            Polarities = "SSSSD",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 16,
                            Armor = 100,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 250,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 8,
                            Name = "Helios Prime",
                            Polarities = "SSSSD",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 17,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nautilus",
                            Polarities = "SSSSD",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 18,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Oxylus",
                            Polarities = "",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 19,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 350,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Shade",
                            Polarities = "SSSS",
                            Shield = 50,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 20,
                            Armor = 75,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 350,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Prisma Shade",
                            Polarities = "SSSSB",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 21,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Taxon",
                            Polarities = "",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 22,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 200,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Wyrm",
                            Polarities = "SSSS",
                            Shield = 100,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 23,
                            Armor = 150,
                            ArmorMaxFactor = 1f,
                            Category = "Sentinel",
                            Health = 225,
                            HealthMaxFactor = 1f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Wyrm Prime",
                            Polarities = "SSSS",
                            Shield = 300,
                            ShieldMaxFactor = 1f
                        },
                        new
                        {
                            Id = 24,
                            Armor = 0,
                            ArmorMaxFactor = 1f,
                            Category = "MOA",
                            Health = 0,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Para",
                            Polarities = "",
                            Shield = 0,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 25,
                            Armor = 0,
                            ArmorMaxFactor = 1f,
                            Category = "MOA",
                            Health = 0,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Lambeo",
                            Polarities = "",
                            Shield = 0,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 26,
                            Armor = 0,
                            ArmorMaxFactor = 1f,
                            Category = "MOA",
                            Health = 0,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Oloro",
                            Polarities = "",
                            Shield = 0,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 27,
                            Armor = 0,
                            ArmorMaxFactor = 1f,
                            Category = "MOA",
                            Health = 0,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Nychus",
                            Polarities = "",
                            Shield = 0,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 28,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 40,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Adarza",
                            Polarities = "SS",
                            Shield = 70,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 29,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 50,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Smeeta",
                            Polarities = "SS",
                            Shield = 60,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 30,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 80,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Vasca",
                            Polarities = "SS",
                            Shield = 70,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 31,
                            Armor = 350,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 300,
                            HealthMaxFactor = 3f,
                            HowToGet = "Khora's special companion",
                            MasteryRankRequired = 0,
                            Name = "Venari",
                            Polarities = "SVDB",
                            Shield = 0,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 32,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 90,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Sly Vulpaphyla",
                            Polarities = "S",
                            Shield = 95,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 33,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 90,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Crescent Vulpaphyla",
                            Polarities = "S",
                            Shield = 95,
                            ShieldMaxFactor = 3f
                        },
                        new
                        {
                            Id = 34,
                            Armor = 50,
                            ArmorMaxFactor = 1f,
                            Category = "Kavat",
                            Health = 90,
                            HealthMaxFactor = 3f,
                            HowToGet = "",
                            MasteryRankRequired = 0,
                            Name = "Panzer Vulpaphyla",
                            Polarities = "S",
                            Shield = 95,
                            ShieldMaxFactor = 3f
                        });
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.PrimaryWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<string>("AmmoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Disposition")
                        .HasColumnType("real");

                    b.Property<float>("FireRate")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazineSize")
                        .HasColumnType("int");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmmo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReloadSeconds")
                        .HasColumnType("real");

                    b.Property<string>("TriggerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrimaryWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accuracy = 25f,
                            AmmoType = "Arm Cannon",
                            Disposition = 0.7f,
                            FireRate = 3.83f,
                            HowToGet = "",
                            MagazineSize = 27,
                            MasteryRankRequired = 0,
                            MaxAmmo = 0,
                            Name = "Bubunico",
                            ProjectileType = "Projectile",
                            ReloadSeconds = 16.875f,
                            TriggerType = "Auto",
                            WeaponType = "Arm Cannon"
                        },
                        new
                        {
                            Id = 2,
                            Accuracy = 23.5f,
                            AmmoType = "Rifle",
                            Disposition = 0.6f,
                            FireRate = 12f,
                            HowToGet = "",
                            MagazineSize = 48,
                            MasteryRankRequired = 8,
                            MaxAmmo = 96,
                            Name = "Acceltra",
                            ProjectileType = "Projectile",
                            ReloadSeconds = 2f,
                            TriggerType = "Auto",
                            WeaponType = "Rifle"
                        },
                        new
                        {
                            Id = 3,
                            Accuracy = 9.1f,
                            AmmoType = "Shotgun",
                            Disposition = 0.9f,
                            FireRate = 1.42f,
                            HowToGet = "",
                            MagazineSize = 20,
                            MasteryRankRequired = 14,
                            MaxAmmo = 120,
                            Name = "Corinth",
                            ProjectileType = "Hit Scan",
                            ReloadSeconds = 3f,
                            TriggerType = "Semi-Auto",
                            WeaponType = "Shotgun"
                        });
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.RoboWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<string>("AmmoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Disposition")
                        .HasColumnType("real");

                    b.Property<float>("FireRate")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazineSize")
                        .HasColumnType("int");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmmo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReloadSeconds")
                        .HasColumnType("real");

                    b.Property<string>("TriggerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoboWeapons");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.SecondaryWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<string>("AmmoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Disposition")
                        .HasColumnType("real");

                    b.Property<float>("FireRate")
                        .HasColumnType("real");

                    b.Property<string>("HowToGet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazineSize")
                        .HasColumnType("int");

                    b.Property<int>("MasteryRankRequired")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmmo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReloadSeconds")
                        .HasColumnType("real");

                    b.Property<string>("TriggerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SecondaryWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accuracy = 33.33f,
                            AmmoType = "Pistol",
                            Disposition = 1.52f,
                            FireRate = 8.33f,
                            HowToGet = "",
                            MagazineSize = 60,
                            MasteryRankRequired = 4,
                            MaxAmmo = 420,
                            Name = "Cestra",
                            ProjectileType = "Projectile",
                            ReloadSeconds = 2f,
                            TriggerType = "Auto",
                            WeaponType = "Pistol"
                        },
                        new
                        {
                            Id = 2,
                            Accuracy = 16f,
                            AmmoType = "Pistol",
                            Disposition = 1.25f,
                            FireRate = 1.08f,
                            HowToGet = "",
                            MagazineSize = 6,
                            MasteryRankRequired = 3,
                            MaxAmmo = 210,
                            Name = "Lex",
                            ProjectileType = "Hit Scan",
                            ReloadSeconds = 2.35f,
                            TriggerType = "Semi-Auto",
                            WeaponType = "Pistol"
                        },
                        new
                        {
                            Id = 3,
                            Accuracy = 5f,
                            AmmoType = "Shotgun Sidearm",
                            Disposition = 0.95f,
                            FireRate = 4.17f,
                            HowToGet = "",
                            MagazineSize = 10,
                            MasteryRankRequired = 12,
                            MaxAmmo = 210,
                            Name = "Pyrana",
                            ProjectileType = "Hit Scan",
                            ReloadSeconds = 2f,
                            TriggerType = "Auto",
                            WeaponType = "Shotgun Sidearm"
                        });
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserItem", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasteryRank")
                        .HasColumnType("int");

                    b.Property<bool>("Obtained")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "ItemId");

                    b.ToTable("UserItem");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserItem");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserArchGun", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserArchGun");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserArchMelee", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserArchMelee");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserArchwing", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserArchwing");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserFrame", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserFrame");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserMeleeWeapon", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserMeleeWeapon");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserPet", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserPet");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserPrimaryWeapon", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserPrimaryWeapon");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserRoboGun", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserRoboGun");
                });

            modelBuilder.Entity("WarframeProgressTrackerApi.Models.UserSecondaryWeapon", b =>
                {
                    b.HasBaseType("WarframeProgressTrackerApi.Models.UserItem");

                    b.HasDiscriminator().HasValue("UserSecondaryWeapon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WarframeProgressTrackerApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WarframeProgressTrackerApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarframeProgressTrackerApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WarframeProgressTrackerApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
